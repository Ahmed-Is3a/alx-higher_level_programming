
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

# m_a is not a list
>>> matrix_mul(3, [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list

# m_b is not a list
>>> matrix_mul([1, 2], 3)
Traceback (most recent call last):
	...
TypeError: m_b must be a list

# m_a is not a list of lists
>>> matrix_mul([7], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists

# m_b is not a list of lists
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_b must be a list of lists

# m_a is empty
>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

# m_b is empty
>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
	...
ValueError: m_b can't be empty

# m_a contain non integer or float
>>> matrix_mul([[1, 'a'], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats

# m_b contain non integer or float
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ['a', 4]])
Traceback (most recent call last):
	...
TypeError: m_b should contain only integers or floats

# m_a is not rectangle
>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_a must be of the same size

# m_b is not rectangle
>>> matrix_mul([[1, 2], [3, 4]], [[0, 1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_b must be of the same size

# m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: m_a and m_b can't be multiplied
